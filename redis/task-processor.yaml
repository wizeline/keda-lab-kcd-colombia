apiVersion: v1
kind: ConfigMap
metadata:
  name: task-processor-script
data:
  processor.py: |
    import redis
    import time
    import os
    import json

    redis_host = os.getenv('REDIS_HOST', 'redis.NAMESPACE.svc.cluster.local')
    redis_port = int(os.getenv('REDIS_PORT', '6379'))
    redis_password = os.getenv('REDIS_PASSWORD', 'redis123')

    r = redis.Redis(host=redis_host, port=redis_port, password=redis_password, decode_responses=True)

    print(f'Connected to Redis at {redis_host}:{redis_port}')
    print('Task processor started. Waiting for tasks...')

    while True:
        try:
            task = r.blpop('task_queue', timeout=10)
            if task:
                task_data = json.loads(task[1])
                task_id = task_data.get('id', 'unknown')
                processing_time = task_data.get('processing_time', 2)
                
                print(f'Processing task {task_id} (will take {processing_time}s)')
                time.sleep(processing_time)
                print(f'Task {task_id} completed')
            else:
                print('No tasks in queue, waiting...')
        except Exception as e:
            print(f'Error processing task: {e}')
            time.sleep(5)
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-processor
  labels:
    app: task-processor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: task-processor
  template:
    metadata:
      labels:
        app: task-processor
    spec:
      containers:
      - name: task-processor
        image: python:3.11-slim
        command:
        - /bin/bash
        - -c
        - |
          pip install redis==5.0.1 > /dev/null 2>&1
          echo "Starting task processor..."
          python3 -u /scripts/processor.py
        env:
        - name: REDIS_HOST
          value: "redis.NAMESPACE.svc.cluster.local"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          value: "redis123"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - name: script-volume
          mountPath: /scripts
      volumes:
      - name: script-volume
        configMap:
          name: task-processor-script