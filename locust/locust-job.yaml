apiVersion: v1
kind: ConfigMap
metadata:
  name: locust-scripts
data:
  locustfile.py: |
    import os
    from locust import HttpUser, task, constant_throughput

    NAMESPACE = os.getenv("NAMESPACE", "default")

    class LoadUser(HttpUser):
        host = f"http://webapp.{NAMESPACE}.svc.cluster.local"
        wait_time = constant_throughput(1)

        @task
        def burn_cpu(self):
            self.client.get("/fib?n=35", timeout=60)

---
apiVersion: batch/v1
kind: Job
metadata:
  name: locust-headless
spec:
  backoffLimit: 0
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: default
      containers:
        - name: locust
          image: locustio/locust:2.32.2
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - -f
            - /locust/locustfile.py
            - --headless
            - -u
            - "150"
            - -r
            - "15"

          volumeMounts:
            - name: scripts
              mountPath: /locust
          resources:
            requests: { cpu: "100m", memory: "128Mi" }
            limits:   { cpu: "500m", memory: "256Mi" }
      volumes:
        - name: scripts
          configMap:
            name: locust-scripts
